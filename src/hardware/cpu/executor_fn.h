/*
 * Copyright (C) 2024  Marco Bortolin
 *
 * This file is part of IBMulator.
 *
 * IBMulator is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * IBMulator is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with IBMulator.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef IBMULATOR_CPU_EXECUTOR_FN_H
#define IBMULATOR_CPU_EXECUTOR_FN_H

enum class CPUExecutorFn {
	INVALID,

	AAA,
	AAD,
	AAM,
	AAS,

	ADC_eb_rb,
	ADC_ew_rw,
	ADC_ed_rd,
	ADC_rb_eb,
	ADC_rw_ew,
	ADC_rd_ed,
	ADC_AL_ib,
	ADC_AX_iw,
	ADC_EAX_id,
	ADC_eb_ib,
	ADC_ew_iw,
	ADC_ed_id,
	ADC_ew_ib,
	ADC_ed_ib,

	ADD_eb_rb,
	ADD_ew_rw,
	ADD_ed_rd,
	ADD_rb_eb,
	ADD_rw_ew,
	ADD_rd_ed,
	ADD_AL_ib,
	ADD_AX_iw,
	ADD_EAX_id,
	ADD_eb_ib,
	ADD_ew_iw,
	ADD_ed_id,
	ADD_ew_ib,
	ADD_ed_ib,

	AND_eb_rb,
	AND_ew_rw,
	AND_ed_rd,
	AND_rb_eb,
	AND_rw_ew,
	AND_rd_ed,
	AND_AL_ib,
	AND_AX_iw,
	AND_EAX_id,
	AND_eb_ib,
	AND_ew_iw,
	AND_ed_id,
	AND_ew_ib,
	AND_ed_ib,

	ARPL_ew_rw,

	BOUND_rw_md,
	BOUND_rd_mq,

	BSF_rw_ew,
	BSF_rd_ed,

	BSR_rw_ew,
	BSR_rd_ed,

	BT_ew_rw,
	BT_ed_rd,
	BT_ew_ib,
	BT_ed_ib,

	BTC_ew_rw,
	BTC_ed_rd,
	BTC_ew_ib,
	BTC_ed_ib,

	BTR_ew_rw,
	BTR_ed_rd,
	BTR_ew_ib,
	BTR_ed_ib,

	BTS_ew_rw,
	BTS_ed_rd,
	BTS_ew_ib,
	BTS_ed_ib,

	CALL_rel16,
	CALL_rel32,
	CALL_ew,
	CALL_ed,
	CALL_ptr1616,
	CALL_ptr1632,
	CALL_m1616,
	CALL_m1632,

	CBW,
	CWD,
	CWDE,
	CDQ,

	CLC,
	CLD,
	CLI,
	CLTS,

	CMC,

	CMP_eb_rb,
	CMP_ew_rw,
	CMP_ed_rd,
	CMP_rb_eb,
	CMP_rw_ew,
	CMP_rd_ed,
	CMP_AL_ib,
	CMP_AX_iw,
	CMP_EAX_id,
	CMP_eb_ib,
	CMP_ew_iw,
	CMP_ed_id,
	CMP_ew_ib,
	CMP_ed_ib,

	CMPSB_a16,
	CMPSB_a32,
	CMPSW_a16,
	CMPSW_a32,
	CMPSD_a16,
	CMPSD_a32,

	DAA,
	DAS,

	DIV_eb,
	DIV_ew,
	DIV_ed,

	DEC_eb,
	DEC_ew,
	DEC_ed,
	DEC_rw_op,
	DEC_rd_op,

	ENTER_o16,
	ENTER_o32,

	FPU_ESC,

	HLT,

	IDIV_eb,
	IDIV_ew,
	IDIV_ed,

	IMUL_eb,
	IMUL_ew,
	IMUL_ed,
	IMUL_rw_ew,
	IMUL_rd_ed,
	IMUL_rw_ew_ib,
	IMUL_rd_ed_ib,
	IMUL_rw_ew_iw,
	IMUL_rd_ed_id,

	IN_AL_ib,
	IN_AL_DX,
	IN_AX_ib,
	IN_EAX_ib,
	IN_AX_DX,
	IN_EAX_DX,

	INC_eb,
	INC_ew,
	INC_ed,
	INC_rw_op,
	INC_rd_op,

	INSB_a16,
	INSB_a32,
	INSW_a16,
	INSW_a32,
	INSD_a16,
	INSD_a32,

	INT1,
	INT3,
	INT_ib,
	INTO,

	IRET,
	IRETD,

	JO_cb,
	JNO_cb,
	JC_cb,
	JNC_cb,
	JE_cb,
	JNE_cb,
	JBE_cb,
	JA_cb,
	JS_cb,
	JNS_cb,
	JPE_cb,
	JPO_cb,
	JL_cb,
	JNL_cb,
	JLE_cb,
	JNLE_cb,

	JO_cw,
	JNO_cw,
	JC_cw,
	JNC_cw,
	JE_cw,
	JNE_cw,
	JBE_cw,
	JA_cw,
	JS_cw,
	JNS_cw,
	JPE_cw,
	JPO_cw,
	JL_cw,
	JNL_cw,
	JLE_cw,
	JNLE_cw,

	JO_cd,
	JNO_cd,
	JC_cd,
	JNC_cd,
	JE_cd,
	JNE_cd,
	JBE_cd,
	JA_cd,
	JS_cd,
	JNS_cd,
	JPE_cd,
	JPO_cd,
	JL_cd,
	JNL_cd,
	JLE_cd,
	JNLE_cd,

	JCXZ_cb,
	JECXZ_cb,

	JMP_rel8,
	JMP_rel16,
	JMP_rel32,
	JMP_ptr1616,
	JMP_ptr1632,
	JMP_ew,
	JMP_ed,
	JMP_m1616,
	JMP_m1632,

	LAHF,

	LAR_rw_ew,
	LAR_rd_ew,

	LEA_rw_m,
	LEA_rd_m,

	LEAVE_o16,
	LEAVE_o32,

	LGDT_o16,
	LGDT_o32,
	LIDT_o16,
	LIDT_o32,
	LLDT_ew,

	LDS_rw_mp,
	LDS_rd_mp,
	LSS_rw_mp,
	LSS_rd_mp,
	LES_rw_mp,
	LES_rd_mp,
	LFS_rw_mp,
	LFS_rd_mp,
	LGS_rw_mp,
	LGS_rd_mp,

	LMSW_ew,

	LOADALL_286,

	LODSB_a16,
	LODSB_a32,
	LODSW_a16,
	LODSW_a32,
	LODSD_a16,
	LODSD_a32,

	LOOP_a16,
	LOOP_a32,
	LOOPZ_a16,
	LOOPZ_a32,
	LOOPNZ_a16,
	LOOPNZ_a32,

	LSL_rw_ew,
	LSL_rd_ew,

	LTR_ew,

	MOV_eb_rb,
	MOV_ew_rw,
	MOV_ed_rd,
	MOV_rb_eb,
	MOV_rw_ew,
	MOV_rd_ed,
	MOV_ew_SR,
	MOV_SR_ew,
	MOV_AL_xb,
	MOV_AX_xw,
	MOV_EAX_xd,
	MOV_xb_AL,
	MOV_xw_AX,
	MOV_xd_EAX,
	MOV_rb_ib,
	MOV_rw_iw,
	MOV_rd_id,
	MOV_eb_ib,
	MOV_ew_iw,
	MOV_ed_id,

	MOV_CR_rd,
	MOV_rd_CR,
	MOV_DR_rd,
	MOV_rd_DR,
	MOV_TR_rd,
	MOV_rd_TR,

	MOVSB_a16,
	MOVSB_a32,
	MOVSW_a16,
	MOVSW_a32,
	MOVSD_a16,
	MOVSD_a32,

	MOVSX_rw_eb,
	MOVSX_rd_eb,
	MOVSX_rd_ew,

	MOVZX_rw_eb,
	MOVZX_rd_eb,
	MOVZX_rd_ew,

	MUL_eb,
	MUL_ew,
	MUL_ed,

	NEG_eb,
	NEG_ew,
	NEG_ed,

	NOP,

	NOT_eb,
	NOT_ew,
	NOT_ed,

	OR_eb_rb,
	OR_ew_rw,
	OR_ed_rd,
	OR_rb_eb,
	OR_rw_ew,
	OR_rd_ed,
	OR_AL_ib,
	OR_AX_iw,
	OR_EAX_id,
	OR_eb_ib,
	OR_ew_iw,
	OR_ed_id,
	OR_ew_ib,
	OR_ed_ib,

	OUT_ib_AL,
	OUT_ib_AX,
	OUT_ib_EAX,
	OUT_DX_AL,
	OUT_DX_AX,
	OUT_DX_EAX,

	OUTSB_a16,
	OUTSB_a32,
	OUTSW_a16,
	OUTSW_a32,
	OUTSD_a16,
	OUTSD_a32,

	POP_SR_w,
	POP_SR_dw,
	POP_mw,
	POP_md,
	POP_rw_op,
	POP_rd_op,

	POPA,
	POPAD,
	POPF,
	POPFD,

	PUSH_SR_w,
	PUSH_SR_dw,
	PUSH_rw_op,
	PUSH_rd_op,
	PUSH_mw,
	PUSH_md,
	PUSH_ib_w,
	PUSH_ib_dw,
	PUSH_iw,
	PUSH_id,

	PUSHA,
	PUSHAD,
	PUSHF,
	PUSHFD,

	ROL_eb_ib,
	ROL_ew_ib,
	ROL_ed_ib,
	ROL_eb_1,
	ROL_ew_1,
	ROL_ed_1,
	ROL_eb_CL,
	ROL_ew_CL,
	ROL_ed_CL,
	ROR_eb_ib,
	ROR_ew_ib,
	ROR_ed_ib,
	ROR_eb_1,
	ROR_ew_1,
	ROR_ed_1,
	ROR_eb_CL,
	ROR_ew_CL,
	ROR_ed_CL,
	RCL_eb_ib,
	RCL_ew_ib,
	RCL_ed_ib,
	RCL_eb_1,
	RCL_ew_1,
	RCL_ed_1,
	RCL_eb_CL,
	RCL_ew_CL,
	RCL_ed_CL,
	RCR_eb_ib,
	RCR_ew_ib,
	RCR_ed_ib,
	RCR_eb_1,
	RCR_ew_1,
	RCR_ed_1,
	RCR_eb_CL,
	RCR_ew_CL,
	RCR_ed_CL,

	RET_near_o16,
	RET_near_o32,
	RET_far_o16,
	RET_far_o32,

	SAL_eb_ib,
	SAL_ew_ib,
	SAL_ed_ib,
	SAL_eb_1,
	SAL_ew_1,
	SAL_ed_1,
	SAL_eb_CL,
	SAL_ew_CL,
	SAL_ed_CL,
	SHR_eb_ib,
	SHR_ew_ib,
	SHR_ed_ib,
	SHR_eb_1,
	SHR_ew_1,
	SHR_ed_1,
	SHR_eb_CL,
	SHR_ew_CL,
	SHR_ed_CL,
	SAR_eb_ib,
	SAR_ew_ib,
	SAR_ed_ib,
	SAR_eb_1,
	SAR_ew_1,
	SAR_ed_1,
	SAR_eb_CL,
	SAR_ew_CL,
	SAR_ed_CL,

	SAHF,

	SALC,

	SBB_eb_rb,
	SBB_ew_rw,
	SBB_ed_rd,
	SBB_rb_eb,
	SBB_rw_ew,
	SBB_rd_ed,
	SBB_AL_ib,
	SBB_AX_iw,
	SBB_EAX_id,
	SBB_eb_ib,
	SBB_ew_iw,
	SBB_ed_id,
	SBB_ew_ib,
	SBB_ed_ib,

	SCASB_a16,
	SCASB_a32,
	SCASW_a16,
	SCASW_a32,
	SCASD_a16,
	SCASD_a32,

	SETO_eb,
	SETNO_eb,
	SETB_eb,
	SETNB_eb,
	SETE_eb,
	SETNE_eb,
	SETBE_eb,
	SETNBE_eb,
	SETS_eb,
	SETNS_eb,
	SETP_eb,
	SETNP_eb,
	SETL_eb,
	SETNL_eb,
	SETLE_eb,
	SETNLE_eb,

	SGDT,
	SIDT,
	SLDT_ew,

	SHLD_ew_rw_ib,
	SHLD_ed_rd_ib,
	SHLD_ew_rw_CL,
	SHLD_ed_rd_CL,

	SHRD_ew_rw_ib,
	SHRD_ed_rd_ib,
	SHRD_ew_rw_CL,
	SHRD_ed_rd_CL,

	SMSW_ew,

	STC,
	STD,
	STI,

	STOSB_a16,
	STOSB_a32,
	STOSW_a16,
	STOSW_a32,
	STOSD_a16,
	STOSD_a32,

	STR_ew,

	SUB_eb_rb,
	SUB_ew_rw,
	SUB_ed_rd,
	SUB_rb_eb,
	SUB_rw_ew,
	SUB_rd_ed,
	SUB_AL_ib,
	SUB_AX_iw,
	SUB_EAX_id,
	SUB_eb_ib,
	SUB_ew_iw,
	SUB_ed_id,
	SUB_ew_ib,
	SUB_ed_ib,

	TEST_eb_rb,
	TEST_ew_rw,
	TEST_ed_rd,
	TEST_AL_ib,
	TEST_AX_iw,
	TEST_EAX_id,
	TEST_eb_ib,
	TEST_ew_iw,
	TEST_ed_id,

	VERR_ew,
	VERW_ew,

	WAIT,

	XCHG_eb_rb,
	XCHG_ew_rw,
	XCHG_ed_rd,
	XCHG_AX_rw,
	XCHG_EAX_rd,

	XLATB_a16,
	XLATB_a32,

	XOR_rb_eb,
	XOR_rw_ew,
	XOR_rd_ed,
	XOR_eb_rb,
	XOR_ew_rw,
	XOR_ed_rd,
	XOR_AL_ib,
	XOR_AX_iw,
	XOR_EAX_id,
	XOR_eb_ib,
	XOR_ew_iw,
	XOR_ed_id,
	XOR_ew_ib,
	XOR_ed_ib
};
	
#endif